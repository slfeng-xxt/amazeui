/**
 * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.
 * Licensed under the BSD-3 License as modified (the “License”); you may obtain
 * a copy of the license in the LICENSE and PATENTS files in the root of this
 * repository.
 */
import { IPageData, IPageNode } from "./client";
export declare class PageMap {
    private store;
    /** Returns an iterator for all the pages (values) in the map. */
    pages(): IterableIterator<IPageData>;
    /** Returns the page with the given ID or `undefined` if not found. */
    get(id: string): IPageData | undefined;
    /** Removes the page with the given ID and returns it or `undefined` if not found. */
    remove(id: string): IPageData | undefined;
    /**
     * Sets the page data at the given ID, when you already have a full page object.
     * Warns if a page with this ID already exists.
     */
    set(id: string, page: IPageData): void;
    /** Returns a JS object mapping page IDs to data. */
    toObject(): {
        [key: string]: IPageData;
    };
    toTree(id: string, depth?: number): IPageNode;
}
