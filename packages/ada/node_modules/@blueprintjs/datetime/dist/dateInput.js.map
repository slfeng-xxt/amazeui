{"version":3,"sources":["../src/dateInput.tsx"],"names":[],"mappings":"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","file":"dateInput.js","sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\nimport * as classNames from \"classnames\";\nimport * as moment from \"moment\";\nimport * as React from \"react\";\n\nimport {\n    AbstractComponent,\n    InputGroup,\n    IProps,\n    Popover,\n    Position,\n    Utils,\n} from \"@blueprintjs/core\";\n\nimport {\n    fromDateToMoment,\n    fromMomentToDate,\n    isMomentInRange,\n    isMomentNull,\n    isMomentValidAndInRange,\n} from \"./common/dateUtils\";\nimport { DatePicker } from \"./datePicker\";\nimport {\n    getDefaultMaxDate,\n    getDefaultMinDate,\n    IDatePickerBaseProps,\n} from \"./datePickerCore\";\nimport { DateTimePicker } from \"./dateTimePicker\";\nimport { TimePickerPrecision } from \"./timePicker\";\n\nexport interface IDateInputProps extends IDatePickerBaseProps, IProps {\n    /**\n     * Allows the user to clear the selection by clicking the currently selected day.\n     * Passed to `DatePicker` component.\n     * @default true\n     */\n    canClearSelection?: boolean;\n\n    /**\n     * Whether the calendar popover should close when a date is selected.\n     * @default true\n     */\n    closeOnSelection?: boolean;\n\n    /**\n     * Whether the date input is non-interactive.\n     * @default false\n     */\n    disabled?: boolean;\n\n    /**\n     * The default date to be used in the component when uncontrolled.\n     */\n    defaultValue?: Date;\n\n    /**\n     * The format of the date. See http://momentjs.com/docs/#/displaying/format/.\n     * @default \"YYYY-MM-DD\"\n     */\n    format?: string;\n\n    /**\n     * The error message to display when the date selected is invalid.\n     * @default \"Invalid date\"\n     */\n    invalidDateMessage?: string;\n\n    /**\n     * Called when the user selects a new valid date through the `DatePicker` or by typing\n     * in the input.\n     */\n    onChange?: (selectedDate: Date) => void;\n\n    /**\n     * Called when the user finishes typing in a new date and the date causes an error state.\n     * If the date is invalid, `new Date(undefined)` will be returned. If the date is out of range,\n     * the out of range date will be returned (`onChange` is not called in this case).\n     */\n    onError?: (errorDate: Date) => void;\n\n    /**\n     * If `true`, the popover will open when the user clicks on the input. If `false`, the popover will only\n     * open when the calendar icon is clicked.\n     * @default true\n     */\n    openOnFocus?: boolean;\n\n    /**\n     * The error message to display when the date selected is out of range.\n     * @default \"Out of range\"\n     */\n    outOfRangeMessage?: string;\n\n    /**\n     * The position the date popover should appear in relative to the input box.\n     * @default Position.BOTTOM\n     */\n    popoverPosition?: Position;\n\n    /**\n     * Element to render on right side of input.\n     */\n    rightElement?: JSX.Element;\n\n    /**\n     * The currently selected day. If this prop is provided, the component acts in a controlled manner.\n     * To display no date in the input field, pass `null` to the value prop. To display an invalid date error\n     * in the input field, pass `new Date(undefined)` to the value prop.\n     */\n    value?: Date;\n\n    /**\n     * Adds a time chooser to the bottom of the popover.\n     * Passed to the `DateTimePicker` component.\n     */\n    timePrecision?: TimePickerPrecision;\n}\n\nexport interface IDateInputState {\n    value?: moment.Moment;\n    valueString?: string;\n    isInputFocused?: boolean;\n    isOpen?: boolean;\n}\n\nexport class DateInput extends AbstractComponent<IDateInputProps, IDateInputState> {\n    public static defaultProps: IDateInputProps = {\n        closeOnSelection: true,\n        disabled: false,\n        format: \"YYYY-MM-DD\",\n        invalidDateMessage: \"Invalid date\",\n        maxDate: getDefaultMaxDate(),\n        minDate: getDefaultMinDate(),\n        openOnFocus: true,\n        outOfRangeMessage: \"Out of range\",\n        popoverPosition: Position.BOTTOM,\n    };\n\n    public displayName = \"Blueprint.DateInput\";\n\n    private inputRef: HTMLElement = null;\n\n    public constructor(props?: IDateInputProps, context?: any) {\n        super(props, context);\n\n        const defaultValue = this.props.defaultValue ? fromDateToMoment(this.props.defaultValue) : moment(null);\n\n        this.state = {\n            isInputFocused: false,\n            isOpen: false,\n            value: this.props.value !== undefined ? fromDateToMoment(this.props.value) : defaultValue,\n            valueString: null,\n        };\n    }\n\n    public render() {\n        const dateString = this.state.isInputFocused ? this.state.valueString : this.getDateString(this.state.value);\n        const date = this.state.isInputFocused ? moment(this.state.valueString, this.props.format) : this.state.value;\n\n        const sharedProps: IDatePickerBaseProps = {\n            ...this.props,\n            onChange: this.handleDateChange,\n            value: this.isMomentValidAndInRange(this.state.value) ? fromMomentToDate(this.state.value) : null,\n        };\n        const popoverContent = this.props.timePrecision === undefined\n            ? <DatePicker {...sharedProps} />\n            : <DateTimePicker\n                {...sharedProps}\n                timePickerProps={{ precision: this.props.timePrecision }}\n            />;\n\n        const inputClasses = classNames({\n            \"pt-intent-danger\": !(this.isMomentValidAndInRange(date) || isMomentNull(date) || dateString === \"\"),\n        });\n\n        return (\n            <Popover\n                autoFocus={false}\n                content={popoverContent}\n                enforceFocus={false}\n                inline={true}\n                isOpen={this.state.isOpen && !this.props.disabled}\n                onClose={this.handleClosePopover}\n                popoverClassName=\"pt-dateinput-popover\"\n                position={this.props.popoverPosition}\n            >\n                <InputGroup\n                    className={inputClasses}\n                    disabled={this.props.disabled}\n                    inputRef={this.setInputRef}\n                    type=\"text\"\n                    onBlur={this.handleInputBlur}\n                    onChange={this.handleInputChange}\n                    onClick={this.handleInputClick}\n                    onFocus={this.handleInputFocus}\n                    placeholder={this.props.format}\n                    rightElement={this.props.rightElement}\n                    value={dateString}\n                />\n            </Popover>\n        );\n    }\n\n    public componentWillReceiveProps(nextProps: IDateInputProps) {\n        if (nextProps.value !== this.props.value) {\n            this.setState({ value: fromDateToMoment(nextProps.value) });\n        }\n\n        super.componentWillReceiveProps(nextProps);\n    }\n\n    private getDateString = (value: moment.Moment) => {\n        if (isMomentNull(value)) {\n            return \"\";\n        }\n        if (value.isValid()) {\n            if (this.isMomentInRange(value)) {\n                return value.format(this.props.format);\n            } else {\n                return this.props.outOfRangeMessage;\n            }\n        }\n        return this.props.invalidDateMessage;\n    }\n\n    private isMomentValidAndInRange(value: moment.Moment) {\n        return isMomentValidAndInRange(value, this.props.minDate, this.props.maxDate);\n    }\n\n    private isMomentInRange(value: moment.Moment) {\n        return isMomentInRange(value, this.props.minDate, this.props.maxDate);\n    }\n\n    private handleClosePopover = () => {\n        this.setState({ isOpen: false });\n    }\n\n    private handleDateChange = (date: Date, hasUserManuallySelectedDate: boolean) => {\n        const momentDate = fromDateToMoment(date);\n        const hasMonthChanged = date !== null && !isMomentNull(this.state.value) && this.state.value.isValid() &&\n            momentDate.month() !== this.state.value.month();\n        const isOpen = !(this.props.closeOnSelection && hasUserManuallySelectedDate && !hasMonthChanged);\n        if (this.props.value === undefined) {\n            this.setState({ isInputFocused: false, isOpen, value: momentDate });\n        } else {\n            this.setState({ isInputFocused: false, isOpen });\n        }\n        Utils.safeInvoke(this.props.onChange, date === null ? null : fromMomentToDate(momentDate));\n    }\n\n    private handleInputFocus = () => {\n        const valueString = isMomentNull(this.state.value) ? \"\" : this.state.value.format(this.props.format);\n\n        if (this.props.openOnFocus) {\n            this.setState({ isInputFocused: true, isOpen: true, valueString });\n        } else {\n            this.setState({ isInputFocused: true, valueString });\n        }\n    }\n\n    private handleInputClick = (e: React.SyntheticEvent<HTMLInputElement>) => {\n        if (this.props.openOnFocus) {\n            e.stopPropagation();\n        }\n    }\n\n    private handleInputChange = (e: React.SyntheticEvent<HTMLInputElement>) => {\n        const valueString = (e.target as HTMLInputElement).value;\n        const value = moment(valueString, this.props.format);\n\n        if (value.isValid() && this.isMomentInRange(value)) {\n            if (this.props.value === undefined) {\n                this.setState({ value, valueString });\n            } else {\n                this.setState({ valueString });\n            }\n            Utils.safeInvoke(this.props.onChange, fromMomentToDate(value));\n        } else {\n            if (valueString.length === 0) {\n                Utils.safeInvoke(this.props.onChange, null);\n            }\n            this.setState({ valueString });\n        }\n    }\n\n    private handleInputBlur = () => {\n        const valueString = this.state.valueString;\n        const value = moment(valueString, this.props.format);\n        if (valueString.length > 0\n            && valueString !== this.getDateString(this.state.value)\n            && (!value.isValid() || !this.isMomentInRange(value))) {\n\n            if (this.props.value === undefined) {\n                this.setState({ isInputFocused: false, value, valueString: null });\n            } else {\n                this.setState({ isInputFocused: false });\n            }\n\n            if (!value.isValid()) {\n                Utils.safeInvoke(this.props.onError, new Date(undefined));\n            } else if (!this.isMomentInRange(value)) {\n                Utils.safeInvoke(this.props.onError, fromMomentToDate(value));\n            } else {\n                Utils.safeInvoke(this.props.onChange, fromMomentToDate(value));\n            }\n        } else {\n            if (valueString.length === 0) {\n                this.setState({ isInputFocused: false, value: moment(null), valueString: null });\n            } else {\n                this.setState({ isInputFocused: false });\n            }\n        }\n    }\n\n    private setInputRef = (el: HTMLElement) => {\n        this.inputRef = el;\n    }\n}\n"]}