{"version":3,"sources":["../src/common/dateUtils.ts"],"names":[],"mappings":"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","file":"common/dateUtils.js","sourcesContent":["/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\nimport * as moment from \"moment\";\nimport { Months } from \"./months\";\n\nexport type DateRange = [Date | undefined, Date | undefined];\nexport type MomentDateRange = [moment.Moment, moment.Moment];\n\nexport enum DateRangeBoundary {\n    START,\n    END,\n};\n\nexport function areEqual(date1: Date, date2: Date) {\n    if (date1 == null && date2 == null) {\n        return true;\n    } else if (date1 == null || date2 == null) {\n        return false;\n    } else {\n        return date1.getTime() === date2.getTime();\n    }\n}\n\nexport function areRangesEqual(dateRange1: DateRange, dateRange2: DateRange) {\n    if (dateRange1 == null && dateRange2 == null) {\n        return true;\n    } else if (dateRange1 == null || dateRange2 == null) {\n        return false;\n    } else {\n        const [start1, end1] = dateRange1;\n        const [start2, end2] = dateRange2;\n        const areStartsEqual = (start1 == null && start2 == null) || areSameDay(start1, start2);\n        const areEndsEqual = (end1 == null && end2 == null) || areSameDay(end1, end2);\n        return areStartsEqual && areEndsEqual;\n    }\n}\n\nexport function areSameDay(date1: Date, date2: Date) {\n    return date1 != null\n        && date2 != null\n        && date1.getDate() === date2.getDate()\n        && date1.getMonth() === date2.getMonth()\n        && date1.getFullYear() === date2.getFullYear();\n}\n\nexport function areSameMonth(date1: Date, date2: Date) {\n    return date1 != null\n        && date2 != null\n        && date1.getMonth() === date2.getMonth()\n        && date1.getFullYear() === date2.getFullYear();\n}\n\nexport function areSameTime(date1: Date, date2: Date) {\n    return date1 != null\n        && date2 != null\n        && date1.getHours() === date2.getHours()\n        && date1.getMinutes() === date2.getMinutes()\n        && date1.getSeconds() === date2.getSeconds()\n        && date1.getMilliseconds() === date2.getMilliseconds();\n}\n\nexport function clone(d: Date) {\n    return new Date(d.getTime());\n}\n\nexport function isDayInRange(date: Date, dateRange: DateRange, exclusive = false) {\n    if (date == null) {\n        return false;\n    }\n\n    const day = clone(date);\n    const start = clone(dateRange[0]);\n    const end = clone(dateRange[1]);\n\n    day.setHours(0, 0, 0, 0);\n    start.setHours(0, 0, 0, 0);\n    end.setHours(0, 0, 0, 0);\n\n    return start <= day && day <= end\n        && (!exclusive\n            || !areSameDay(start, day) && !areSameDay(day, end));\n}\n\nexport function isDayRangeInRange(innerRange: DateRange, outerRange: DateRange) {\n    return (innerRange[0] == null || isDayInRange(innerRange[0], outerRange))\n        && (innerRange[1] == null || isDayInRange(innerRange[1], outerRange));\n}\n\nexport function isMonthInRange(date: Date, dateRange: DateRange) {\n    if (date == null) {\n        return false;\n    }\n\n    const day = clone(date);\n    const start = clone(dateRange[0]);\n    const end = clone(dateRange[1]);\n\n    day.setDate(1);\n    start.setDate(1);\n    end.setDate(1);\n    day.setHours(0, 0, 0, 0);\n    start.setHours(0, 0, 0, 0);\n    end.setHours(0, 0, 0, 0);\n\n    return start <= day && day <= end;\n}\n\n/**\n * @returns a Date at the exact time-wise midpoint between startDate and endDate\n */\nexport function getDateBetween(dateRange: DateRange) {\n    const start = dateRange[0].getTime();\n    const end = dateRange[1].getTime();\n    const middle = start + (end - start) * 0.5;\n    return new Date(middle);\n}\n\nexport function getDateTime(date: Date, time: Date) {\n    if (date === null) {\n        return null;\n    } else if (time === null) {\n        return new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0, 0);\n    } else {\n        return new Date(date.getFullYear(), date.getMonth(), date.getDate(),\n            time.getHours(), time.getMinutes(), time.getSeconds(), time.getMilliseconds());\n    }\n}\n\nexport function isMomentNull(momentDate: moment.Moment) {\n    return momentDate.parsingFlags().nullInput;\n}\n\nexport function isMomentValidAndInRange(momentDate: moment.Moment, minDate: Date, maxDate: Date) {\n    return momentDate.isValid() && isMomentInRange(momentDate, minDate, maxDate);\n}\n\nexport function isMomentInRange(momentDate: moment.Moment, minDate: Date, maxDate: Date) {\n    return momentDate.isBetween(minDate, maxDate, \"day\", \"[]\");\n}\n\n/**\n * Translate a Date object into a moment, adjusting the local timezone into the moment one.\n * This is a no-op unless moment-timezone's setDefault has been called.\n */\nexport function fromDateToMoment(date: Date) {\n    if (date == null || typeof date === \"string\") {\n        return moment(date);\n    } else {\n        return moment([\n            date.getFullYear(),\n            date.getMonth(),\n            date.getDate(),\n            date.getHours(),\n            date.getMinutes(),\n            date.getSeconds(),\n            date.getMilliseconds(),\n        ]);\n    }\n}\n\n/**\n * Translate a moment into a Date object, adjusting the moment timezone into the local one.\n * This is a no-op unless moment-timezone's setDefault has been called.\n */\nexport function fromMomentToDate(momentDate: moment.Moment) {\n    if (momentDate == null) {\n        return undefined;\n    } else {\n        return new Date(\n            momentDate.year(),\n            momentDate.month(),\n            momentDate.date(),\n            momentDate.hours(),\n            momentDate.minutes(),\n            momentDate.seconds(),\n            momentDate.milliseconds(),\n        );\n    }\n}\n\n/**\n * Translate a DateRange into a MomentDateRange, adjusting the local timezone\n * into the moment one (a no-op unless moment-timezone's setDefault has been\n * called).\n */\nexport function fromDateRangeToMomentDateRange(dateRange: DateRange) {\n    if (dateRange == null) {\n        return undefined;\n    }\n    return [\n        fromDateToMoment(dateRange[0]),\n        fromDateToMoment(dateRange[1]),\n    ] as MomentDateRange;\n}\n\n/**\n * Translate a MomentDateRange into a DateRange, adjusting the moment timezone\n * into the local one. This is a no-op unless moment-timezone's setDefault has\n * been called.\n */\nexport function fromMomentDateRangeToDateRange(momentDateRange: MomentDateRange) {\n    if (momentDateRange == null) {\n        return undefined;\n    }\n    return [\n        fromMomentToDate(momentDateRange[0]),\n        fromMomentToDate(momentDateRange[1]),\n    ] as DateRange;\n}\n\nexport function getDatePreviousMonth(date: Date): Date {\n    if (date.getMonth() === Months.JANUARY) {\n        return new Date(date.getFullYear() - 1, Months.DECEMBER);\n    } else {\n        return new Date(date.getFullYear(), date.getMonth() - 1);\n    }\n}\n\nexport function getDateNextMonth(date: Date): Date {\n    if (date.getMonth() === Months.DECEMBER) {\n        return new Date(date.getFullYear() + 1, Months.JANUARY);\n    } else {\n        return new Date(date.getFullYear(), date.getMonth() + 1);\n    }\n}\n"]}