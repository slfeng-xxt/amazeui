/*
 * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.
 * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy
 * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE
 * and https://github.com/palantir/blueprint/blob/master/PATENTS
 */
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var core_1 = require("@blueprintjs/core");
var classNames = require("classnames");
var React = require("react");
var client_1 = require("documentalist/dist/client");
// tslint:disable-next-line:max-line-length
exports.NavMenuItem = function (props) {
    var item = props.item;
    var classes = classNames("docs-menu-item", "docs-menu-item-" + (client_1.isPageNode(item) ? "page" : "heading"), "depth-" + item.level, props.className);
    var itemClasses = classNames(core_1.Classes.MENU_ITEM, (_a = {},
        _a[core_1.Classes.ACTIVE] = props.isActive,
        _a[core_1.Classes.INTENT_PRIMARY] = props.isActive,
        _a));
    var handleClick = function () { return props.onClick(item.route); };
    return (React.createElement("li", { className: classes, key: item.route },
        React.createElement("a", { className: itemClasses, href: "#" + item.route, onClick: handleClick }, item.title),
        props.children));
    var _a;
};
exports.NavMenuItem.displayName = "Docs.NavMenuItem";
exports.NavMenu = function (props) {
    var menu = props.items.map(function (section) {
        var isActive = props.activeSectionId === section.route;
        var isExpanded = isActive || isParentOfRoute(section.route, props.activeSectionId);
        // active section gets selected styles, expanded section shows its children
        var classes = classNames({ "docs-nav-expanded": isExpanded });
        var childrenMenu = client_1.isPageNode(section)
            ? React.createElement(exports.NavMenu, tslib_1.__assign({}, props, { items: section.children }))
            : undefined;
        return (React.createElement(exports.NavMenuItem, { className: classes, key: section.route, item: section, isActive: isActive, onClick: props.onItemClick }, childrenMenu));
    });
    var classes = classNames("docs-nav-menu", "pt-list-unstyled", props.className);
    return React.createElement("ul", { className: classes }, menu);
};
exports.NavMenu.displayName = "Docs.NavMenu";
function isParentOfRoute(parent, route) {
    return route.indexOf(parent + "/") === 0 || route.indexOf(parent + ".") === 0;
}

//# sourceMappingURL=navMenu.js.map
