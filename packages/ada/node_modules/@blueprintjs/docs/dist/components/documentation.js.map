{"version":3,"sources":["../src/components/documentation.tsx"],"names":[],"mappings":"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","file":"components/documentation.js","sourcesContent":["/*\n * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\nimport * as classNames from \"classnames\";\nimport { IMarkdownPluginData, isPageNode } from \"documentalist/dist/client\";\nimport * as React from \"react\";\n\nimport { FocusStyleManager, Hotkey, Hotkeys, HotkeysTarget, IProps, Utils } from \"@blueprintjs/core\";\n\nimport { eachLayoutNode } from \"../common/utils\";\nimport { TagRenderer } from \"../tags\";\nimport { Navigator } from \"./navigator\";\nimport { NavMenu } from \"./navMenu\";\nimport { Page } from \"./page\";\n\nexport interface IDocumentationProps extends IProps {\n    /**\n     * Default page to render in the absence of a hash route.\n     */\n    defaultPageId: string;\n\n    /**\n     * All the docs data from Documentalist.\n     * Must include at least  `{ nav, pages }` from the MarkdownPlugin.\n     */\n    docs: IMarkdownPluginData;\n\n    /**\n     * Callback invoked whenever the component props or state change (specifically,\n     * called in `componentDidMount` and `componentDidUpdate`).\n     * Use it to run non-React code on the newly rendered sections.\n     */\n    onComponentUpdate?: (pageId: string) => void;\n\n    /** Tag renderer functions. Unknown tags will log console errors. */\n    tagRenderers: { [tag: string]: TagRenderer };\n\n    /**\n     * Elements to render on the left side of the navbar, typically logo and title.\n     * All elements will be wrapped in a single `.pt-navbar-group`.\n     * @default \"Documentation\"\n     */\n    navbarLeft?: React.ReactNode;\n\n    /**\n     * Element to render on the right side of the navbar, typically links and actions.\n     * All elements will be wrapped in a single `.pt-navbar-group`.\n     */\n    navbarRight?: React.ReactNode;\n}\n\nexport interface IDocumentationState {\n    activePageId: string;\n    activeSectionId: string;\n}\n\n@HotkeysTarget\nexport class Documentation extends React.PureComponent<IDocumentationProps, IDocumentationState> {\n    public static defaultProps = {\n        navbarLeft: \"Documentation\",\n    };\n\n    /** Map of section route to containing page reference. */\n    private routeToPage: { [route: string]: string };\n\n    private contentElement: HTMLElement;\n    private navElement: HTMLElement;\n    private refHandlers = {\n        content: (ref: HTMLElement) => this.contentElement = ref,\n        nav: (ref: HTMLElement) => this.navElement = ref,\n    };\n\n    public constructor(props: IDocumentationProps) {\n        super(props);\n        this.state = {\n            activePageId: props.defaultPageId,\n            activeSectionId: props.defaultPageId,\n        };\n\n        // build up static map of all references to their page, for navigation / routing\n        this.routeToPage = {};\n        eachLayoutNode(this.props.docs.nav, (node, parents) => {\n            const { reference } = isPageNode(node) ? node : parents[0];\n            this.routeToPage[node.route] = reference;\n        });\n    }\n\n    public render() {\n        const { activePageId, activeSectionId } = this.state;\n        const { nav, pages } = this.props.docs;\n        return (\n            <div className={classNames(\"docs-root\", this.props.className)}>\n                <div className=\"docs-app\">\n                    <div className=\"pt-navbar docs-navbar docs-flex-row\">\n                        <div className=\"pt-navbar-group\">\n                            {this.props.navbarLeft}\n                        </div>\n                        <div className=\"pt-navbar-group\">\n                            <Navigator items={nav} onNavigate={this.handleNavigation} />\n                        </div>\n                        <div className=\"pt-navbar-group\">\n                            {this.props.navbarRight}\n                        </div>\n                    </div>\n                    <div className=\"docs-nav\" ref={this.refHandlers.nav}>\n                        <NavMenu\n                            items={nav}\n                            activePageId={activePageId}\n                            activeSectionId={activeSectionId}\n                            onItemClick={this.handleNavigation}\n                        />\n                    </div>\n                    <article className=\"docs-content\" ref={this.refHandlers.content} role=\"main\">\n                        <Page page={pages[activePageId]} tagRenderers={this.props.tagRenderers} />\n                    </article>\n                </div>\n            </div>\n        );\n    }\n\n    public renderHotkeys() {\n        return (\n            <Hotkeys>\n                <Hotkey global={true} combo=\"[\" label=\"Previous section\" onKeyDown={this.handlePreviousSection}/>\n                <Hotkey global={true} combo=\"]\" label=\"Next section\" onKeyDown={this.handleNextSection}/>\n            </Hotkeys>\n        );\n    }\n\n    public componentWillMount() {\n        this.updateHash();\n    }\n\n    public componentDidMount() {\n        // hooray! so you don't have to!\n        FocusStyleManager.onlyShowFocusOnTabs();\n        this.scrollToActiveSection();\n        this.maybeScrollToActivePageMenuItem();\n        Utils.safeInvoke(this.props.onComponentUpdate, this.state.activePageId);\n        // whoa handling future history...\n        window.addEventListener(\"hashchange\", () => {\n            if (location.hostname.indexOf(\"blueprint\") !== -1) {\n                // captures a pageview for new location hashes that are dynamically rendered without a full page request\n                (window as any).ga(\"send\", \"pageview\", { page: location.pathname + location.search + location.hash });\n            }\n            // Don't call componentWillMount since the HotkeysTarget decorator will be invoked on every hashchange.\n            this.updateHash();\n        });\n        document.addEventListener(\"scroll\", this.handleScroll);\n    }\n\n    public componentWillUnmount() {\n        window.removeEventListener(\"hashchange\");\n        document.removeEventListener(\"scroll\", this.handleScroll);\n    }\n\n    public componentDidUpdate(_prevProps: IDocumentationProps, prevState: IDocumentationState) {\n        const { activePageId } = this.state;\n\n        // only scroll to heading when switching pages, but always check if nav item needs scrolling.\n        if (prevState.activePageId !== activePageId) {\n            this.scrollToActiveSection();\n            this.maybeScrollToActivePageMenuItem();\n        }\n\n        Utils.safeInvoke(this.props.onComponentUpdate, activePageId);\n    }\n\n    private updateHash() {\n        // update state based on current hash location\n        this.handleNavigation(location.hash.slice(1));\n    }\n\n    private handleNavigation = (activeSectionId: string) => {\n        // only update state if this section reference is valid\n        const activePageId = this.routeToPage[activeSectionId];\n        if (activeSectionId !== undefined && activePageId !== undefined) {\n            this.setState({ activePageId, activeSectionId });\n        }\n    }\n\n    private handleNextSection = () => this.shiftSection(1);\n    private handlePreviousSection = () => this.shiftSection(-1);\n\n    private handleScroll = () => {\n        const activeSectionId = getScrolledReference(100, this.contentElement);\n        if (activeSectionId == null) { return; }\n        // use the longer (deeper) name to avoid jumping up between sections\n        this.setState({ ...this.state, activeSectionId });\n    }\n\n    private maybeScrollToActivePageMenuItem() {\n        const { activeSectionId } = this.state;\n        // only scroll nav menu if active item is not visible in viewport.\n        // using activeSectionId so you can see the page title in nav (may not be visible in document).\n        const navMenuElement = this.navElement\n            .query(`a[href=\"#${activeSectionId}\"]`).closest(\".docs-menu-item-page\");\n        const innerBounds = navMenuElement.getBoundingClientRect();\n        const outerBounds = this.navElement.getBoundingClientRect();\n        if (innerBounds.top < outerBounds.top || innerBounds.bottom > outerBounds.bottom) {\n            navMenuElement.scrollIntoView();\n        }\n    }\n\n    private scrollToActiveSection() {\n        scrollToReference(this.state.activeSectionId, this.contentElement);\n    }\n\n    private shiftSection(direction: 1 | -1) {\n        // use the current hash instead of `this.state.activeSectionId` to avoid cases where the\n    \t// active section cannot actually be selected in the nav (often a short one at the end).\n        const currentSectionId = location.hash.slice(1);\n        // this map is built by an in-order traversal so the keys are actually sorted correctly!\n        const sections = Object.keys(this.routeToPage);\n        const index = sections.indexOf(currentSectionId);\n        const newIndex = index === -1 ? 0 : (index + direction + sections.length) % sections.length;\n        // updating hash triggers event listener which sets new state.\n        location.hash = sections[newIndex];\n    }\n}\n\n/** Shorthand for element.query() + cast to HTMLElement */\nfunction queryHTMLElement(parent: Element, selector: string) {\n    return parent.query(selector) as HTMLElement;\n}\n\n/**\n * Returns the reference of the closest section within `offset` pixels of the top of the viewport.\n */\nfunction getScrolledReference(offset: number, container: HTMLElement, scrollParent = document.body) {\n    const headings = container.queryAll(\".docs-title\");\n    while (headings.length > 0) {\n        // iterating in reverse order (popping from end / bottom of page)\n        // so the first element below the threshold is the one we want.\n        const element = headings.pop() as HTMLElement;\n        if (element.offsetTop < scrollParent.scrollTop + offset) {\n            // relying on DOM structure to get reference\n            return element.query(\"[name]\").getAttribute(\"name\");\n        }\n    }\n    return undefined;\n}\n\n/**\n * Scroll the scrollParent such that the reference heading appears at the top of the viewport.\n */\nfunction scrollToReference(reference: string, container: HTMLElement, scrollParent = document.body) {\n    const headingAnchor = queryHTMLElement(container, `a[name=\"${reference}\"]`);\n    if (headingAnchor == null || headingAnchor.parentElement == null) {\n        return;\n    }\n    const scrollOffset = headingAnchor.parentElement!.offsetTop + headingAnchor.offsetTop;\n    scrollParent.scrollTop = scrollOffset;\n}\n"]}