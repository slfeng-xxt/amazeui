/*
 * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.
 * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy
 * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE
 * and https://github.com/palantir/blueprint/blob/master/PATENTS
 */
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var PropsStore = (function () {
    function PropsStore(props) {
        var _this = this;
        this.props = props;
        this.getInterface = function (name) {
            return _this.props[name];
        };
        this.getProps = function (entry) {
            if (entry == null) {
                return [];
            }
            else if (entry.extends == null) {
                return entry.properties;
            }
            else {
                // dirty deduplication for overridden/inherited props
                var props_1 = {};
                entry.extends.map(_this.getInheritedProps).forEach(function (inherited) {
                    inherited.forEach(function (prop) { return props_1[prop.name] = prop; });
                });
                entry.properties.forEach(function (prop) { return props_1[prop.name] = prop; });
                // return a sorted array of unique props
                return Object.keys(props_1).sort().map(function (n) { return props_1[n]; });
            }
        };
        this.getInheritedProps = function (name) {
            return _this.getProps(_this.getInterface(name)).map(function (p) {
                p.inheritedFrom = name;
                return p;
            });
        };
    }
    return PropsStore;
}());
exports.PropsStore = PropsStore;

//# sourceMappingURL=propsStore.js.map
