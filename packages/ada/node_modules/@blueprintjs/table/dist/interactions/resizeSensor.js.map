{"version":3,"sources":["../src/interactions/resizeSensor.ts"],"names":[],"mappings":"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","file":"interactions/resizeSensor.js","sourcesContent":["/**\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\nimport * as Classes from \"../common/classes\";\n\n/**\n * Efficiently detect when an HTMLElement is resized.\n *\n * Attaches an invisible \"resize-sensor\" div to the element. Then it checks\n * the element's offsetWidth and offsetHeight whenever a scroll event is\n * triggered on the \"resize-sensor\" children. These events are further\n * debounced using requestAnimationFrame.\n *\n * Inspired by: https://github.com/marcj/css-element-queries/blob/master/src/ResizeSensor.js\n */\nexport class ResizeSensor {\n    public static attach(element: HTMLElement, callback: () => void) {\n        const lifecycle = ResizeSensor.debounce(callback);\n\n        const resizeSensor = document.createElement(\"div\") as HTMLElement;\n        resizeSensor.className = Classes.TABLE_RESIZE_SENSOR;\n        resizeSensor.style.cssText = ResizeSensor.RESIZE_SENSOR_STYLE;\n        resizeSensor.innerHTML = ResizeSensor.RESIZE_SENSOR_HTML;\n\n        element.appendChild(resizeSensor);\n\n        if (getComputedStyle(element, null).getPropertyValue(\"position\") === \"static\") {\n            element.style.position = \"relative\";\n        }\n\n        const expand = resizeSensor.childNodes[0] as HTMLElement;\n        const expandChild = expand.childNodes[0] as HTMLElement;\n        const shrink = resizeSensor.childNodes[1] as HTMLElement;\n\n        const reset = () => {\n            expandChild.style.width  = \"100000px\";\n            expandChild.style.height = \"100000px\";\n            expand.scrollLeft = 100000;\n            expand.scrollTop = 100000;\n            shrink.scrollLeft = 100000;\n            shrink.scrollTop = 100000;\n        };\n        reset();\n\n        let lastWidth: number;\n        let lastHeight: number;\n        const onScroll = () => {\n            const currentWidth = element.offsetWidth;\n            const currentHeight = element.offsetHeight;\n            if (currentWidth !== lastWidth || currentHeight !== lastHeight) {\n                lastWidth = currentWidth;\n                lastHeight = currentHeight;\n                lifecycle.trigger();\n            }\n            reset();\n        };\n        expand.addEventListener(\"scroll\", onScroll);\n        shrink.addEventListener(\"scroll\", onScroll);\n\n        return () => {\n            element.removeChild(resizeSensor);\n            lifecycle.cancelled = true;\n        };\n    }\n\n    private static RESIZE_SENSOR_STYLE = \"position: absolute; left: 0; top: 0; right: 0; \" +\n        \"bottom: 0; overflow: hidden; z-index: -1; visibility: hidden;\";\n\n    private static RESIZE_SENSOR_HTML = `<div class=\"${Classes.TABLE_RESIZE_SENSOR_EXPAND}\"\n        style=\"${ResizeSensor.RESIZE_SENSOR_STYLE}\"><div style=\"position: absolute; left: 0; top: 0; transition: 0s;\"\n        ></div></div><div class=\"${Classes.TABLE_RESIZE_SENSOR_SHRINK}\" style=\"${ResizeSensor.RESIZE_SENSOR_STYLE}\"\n        ><div style=\"position: absolute; left: 0; top: 0; transition: 0s; width: 200%; height: 200%;\"></div></div>`;\n\n    private static debounce(callback: () => void) {\n        const scope = {\n            cancelled: false,\n            trigger: () => {\n                if (scope.triggered || scope.cancelled) {\n                    return;\n                }\n                scope.triggered = true;\n                requestAnimationFrame(() => {\n                    scope.triggered = false;\n                    if (!scope.cancelled) {\n                        callback();\n                    }\n                });\n            },\n            triggered: false,\n        };\n        return scope;\n    }\n}\n"]}