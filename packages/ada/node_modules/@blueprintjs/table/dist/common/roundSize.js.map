{"version":3,"sources":["../src/common/roundSize.tsx"],"names":[],"mappings":"AAAA;;;;;GAKG;;;;AAEH,6BAA+B;AAC/B,mCAAqC;AAErC;;;;;GAKG;AACH;IAA+B,qCAAuB;IAAtD;QAAA,qEAsCC;QAFW,oBAAc,GAAG,UAAC,GAAgB,IAAK,OAAA,KAAI,CAAC,eAAe,GAAG,GAAG,EAA1B,CAA0B,CAAC;QAClE,qBAAe,GAAG,UAAC,GAAgB,IAAK,OAAA,KAAI,CAAC,gBAAgB,GAAG,GAAG,EAA3B,CAA2B,CAAC;;IAChF,CAAC;IAlCU,0BAAM,GAAb;QACI,MAAM,CAAC,CACH,6BAAK,SAAS,EAAE,OAAO,CAAC,oBAAoB,EAAE,GAAG,EAAE,IAAI,CAAC,eAAe;YACnE,6BAAK,SAAS,EAAE,OAAO,CAAC,eAAe,EAAE,GAAG,EAAE,IAAI,CAAC,cAAc,IAC5D,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CACvC,CACJ,CACT,CAAC;IACN,CAAC;IAEM,qCAAiB,GAAxB;QACI,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEM,sCAAkB,GAAzB;QACI,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEO,mCAAe,GAAvB;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,IAAI,IAAI,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,CAAC,CAAC;YAChE,MAAM,CAAC;QACX,CAAC;QAED,4CAA4C;QAC5C,IAAM,KAAK,GAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,OAAI,CAAC;QAClE,IAAM,MAAM,GAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,OAAI,CAAC;QAEpE,4DAA4D;QAC5D,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;QAC1C,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;IAChD,CAAC;IAIL,gBAAC;AAAD,CAtCA,AAsCC,CAtC8B,KAAK,CAAC,SAAS,GAsC7C;AAtCY,8BAAS","file":"common/roundSize.js","sourcesContent":["/**\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\nimport * as React from \"react\";\nimport * as Classes from \"./classes\";\n\n/**\n * A React component that measures and rounds the size of its only child. This\n * is necessary due to a Chrome bug that prevents scrolling when the size is\n * changed to a fractional value. See this JSFiddle for a repro of the issue:\n * https://jsfiddle.net/2rmz7p1d/5/\n */\nexport class RoundSize extends React.Component<{}, {}> {\n    private internalElement: HTMLElement;\n    private containerElement: HTMLElement;\n\n    public render() {\n        return (\n            <div className={Classes.TABLE_ROUNDED_LAYOUT} ref={this.setContainerRef}>\n                <div className={Classes.TABLE_NO_LAYOUT} ref={this.setInternalRef}>\n                    {React.Children.only(this.props.children)}\n                </div>\n            </div>\n        );\n    }\n\n    public componentDidMount() {\n        this.copyRoundedSize();\n    }\n\n    public componentDidUpdate() {\n        this.copyRoundedSize();\n    }\n\n    private copyRoundedSize() {\n        if (this.internalElement == null || this.containerElement == null) {\n            return;\n        }\n\n        // measure the size of the internal children\n        const width = `${Math.round(this.internalElement.clientWidth)}px`;\n        const height = `${Math.round(this.internalElement.clientHeight)}px`;\n\n        // set the size of the container element with rounded values\n        this.containerElement.style.width = width;\n        this.containerElement.style.height = height;\n    }\n\n    private setInternalRef = (ref: HTMLElement) => this.internalElement = ref;\n    private setContainerRef = (ref: HTMLElement) => this.containerElement = ref;\n}\n"]}