{"version":3,"sources":["../src/headers/editableName.tsx"],"names":[],"mappings":"AAAA;;;;;GAKG;;;;AAEH,0CAAuE;AACvE,uCAAyC;AACzC,6BAA+B;AAC/B,2CAA6C;AA6B7C;IAAkC,wCAAuC;IAAzE;;IAiBA,CAAC;IAhBU,6BAAM,GAAb;QACU,IAAA,eAAuE,EAArE,wBAAS,EAAE,kBAAM,EAAE,cAAI,EAAE,sBAAQ,EAAE,sBAAQ,EAAE,wBAAS,CAAgB;QAC9E,MAAM,CAAC,CACH,oBAAC,mBAAY,IACT,SAAS,EAAE,UAAU,CAAC,SAAS,EAAE,OAAO,CAAC,mBAAmB,CAAC,EAC7D,YAAY,EAAE,IAAI,EAClB,MAAM,EAAE,MAAM,EACd,QAAQ,EAAE,IAAI,EACd,QAAQ,EAAE,QAAQ,EAClB,QAAQ,EAAE,QAAQ,EAClB,SAAS,EAAE,SAAS,EACpB,WAAW,EAAC,EAAE,EACd,gBAAgB,EAAE,IAAI,GACxB,CACL,CAAC;IACN,CAAC;IACL,mBAAC;AAAD,CAjBA,AAiBC,CAjBiC,KAAK,CAAC,SAAS,GAiBhD;AAjBY,oCAAY","file":"headers/editableName.js","sourcesContent":["/**\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\nimport { EditableText, IIntentProps, IProps } from \"@blueprintjs/core\";\nimport * as classNames from \"classnames\";\nimport * as React from \"react\";\nimport * as Classes from \"../common/classes\";\n\nexport interface IEditableNameProps extends IIntentProps, IProps {\n    /**\n     * The name displayed in the text box. Be sure to update this value when\n     * rendering this component after a confirmed change.\n     */\n    name?: string;\n\n    /**\n     * A listener that is triggered if the user cancels the edit. This is\n     * important to listen to if you are doing anything with `onChange` events,\n     * since you'll likely want to revert whatever changes you made.\n     */\n    onCancel?: (value: string) => void;\n\n    /**\n     * A listener that is triggered as soon as the editable name is modified.\n     * This can be due, for example, to keyboard input or the clipboard.\n     */\n    onChange?: (value: string) => void;\n\n    /**\n     * A listener that is triggered once the editing is confirmed. This is\n     * usually due to the `return` (or `enter`) key press.\n     */\n    onConfirm?: (value: string) => void;\n}\n\nexport class EditableName extends React.Component<IEditableNameProps, {}> {\n    public render() {\n        const { className, intent, name, onCancel, onChange, onConfirm } = this.props;\n        return (\n            <EditableText\n                className={classNames(className, Classes.TABLE_EDITABLE_NAME)}\n                defaultValue={name}\n                intent={intent}\n                minWidth={null}\n                onCancel={onCancel}\n                onChange={onChange}\n                onConfirm={onConfirm}\n                placeholder=\"\"\n                selectAllOnFocus={true}\n            />\n        );\n    }\n}\n"]}