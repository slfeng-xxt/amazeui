import * as React from "react";
import { IIntentProps, IProps } from "@blueprintjs/core";
export interface ICellProps extends IIntentProps, IProps {
    key?: string;
    style?: React.CSSProperties;
    /**
     * If `true`, the cell will be rendered above overlay layers to enable mouse
     * interactions within the cell.
     * @default false
     */
    interactive?: boolean;
    /**
     * An optional native tooltip that is displayed on hover.
     * If `true`, content will be replaced with a fixed-height skeleton.
     * @default false
     */
    loading?: boolean;
    /**
     * An optional native tooltip that is displayed on hover.
     */
    tooltip?: string;
    /**
     * If `true`, the cell contents will be wrapped in a `div` with
     * styling that will prevent the content from overflowing the cell.
     * @default true
     */
    truncated?: boolean;
    /**
     * If `true`, the cell contents will be wrapped in a `div` with
     * styling that will cause text to wrap, rather than displaying it on a single line.
     * @default false
     */
    wrapText?: boolean;
}
export declare type ICellRenderer = (rowIndex: number, columnIndex: number) => React.ReactElement<ICellProps>;
export declare const emptyCellRenderer: () => JSX.Element;
export declare class Cell extends React.Component<ICellProps, {}> {
    static defaultProps: {
        truncated: boolean;
        wrapText: boolean;
    };
    render(): JSX.Element;
}
